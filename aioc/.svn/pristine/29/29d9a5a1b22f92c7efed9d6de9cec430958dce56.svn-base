/*
* generated by Xtext
*/
grammar InternalAioc;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.services.AiocGrammarAccess;

}

@parser::members {

 	private AiocGrammarAccess grammarAccess;
 	
    public InternalAiocParser(TokenStream input, AiocGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AiocJ";	
   	}
   	
   	@Override
   	protected AiocGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAiocJ
entryRuleAiocJ returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAiocJRule()); }
	 iv_ruleAiocJ=ruleAiocJ 
	 { $current=$iv_ruleAiocJ.current; } 
	 EOF 
;

// Rule AiocJ
ruleAiocJ returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAiocJAccess().getAiocAiocParserRuleCall_0_0()); 
	    }
		lv_aioc_0_0=ruleAioc		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAiocJRule());
	        }
       		set(
       			$current, 
       			"aioc",
        		lv_aioc_0_0, 
        		"Aioc");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAiocJAccess().getRuleSetRuleParserRuleCall_1_0()); 
	    }
		lv_ruleSet_1_0=ruleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAiocJRule());
	        }
       		add(
       			$current, 
       			"ruleSet",
        		lv_ruleSet_1_0, 
        		"Rule");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAioc
entryRuleAioc returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAiocRule()); }
	 iv_ruleAioc=ruleAioc 
	 { $current=$iv_ruleAioc.current; } 
	 EOF 
;

// Rule Aioc
ruleAioc returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAiocAccess().getFunctionLocationFunctionLocationParserRuleCall_0_0()); 
	    }
		lv_functionLocation_0_0=ruleFunctionLocation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAiocRule());
	        }
       		add(
       			$current, 
       			"functionLocation",
        		lv_functionLocation_0_0, 
        		"FunctionLocation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='preamble' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAiocAccess().getPreambleKeyword_1());
    }
this_LCURLY_2=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_2, grammarAccess.getAiocAccess().getLCURLYTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAiocAccess().getPreamblePreambleParserRuleCall_3_0()); 
	    }
		lv_preamble_3_0=rulePreamble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAiocRule());
	        }
       		set(
       			$current, 
       			"preamble",
        		lv_preamble_3_0, 
        		"Preamble");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_4=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_4, grammarAccess.getAiocAccess().getRCURLYTerminalRuleCall_4()); 
    }
	otherlv_5='aioc' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAiocAccess().getAiocKeyword_5());
    }
this_LCURLY_6=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_6, grammarAccess.getAiocAccess().getLCURLYTerminalRuleCall_6()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAiocAccess().getChoreographyChoreographyParserRuleCall_7_0()); 
	    }
		lv_choreography_7_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAiocRule());
	        }
       		set(
       			$current, 
       			"choreography",
        		lv_choreography_7_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_8=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_8, grammarAccess.getAiocAccess().getRCURLYTerminalRuleCall_8()); 
    }
)
;





// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	 iv_ruleRule=ruleRule 
	 { $current=$iv_ruleRule.current; } 
	 EOF 
;

// Rule Rule
ruleRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRuleKeyword_0());
    }
this_LCURLY_1=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_1, grammarAccess.getRuleAccess().getLCURLYTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getFunctionLocationFunctionLocationParserRuleCall_2_0()); 
	    }
		lv_functionLocation_2_0=ruleFunctionLocation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		add(
       			$current, 
       			"functionLocation",
        		lv_functionLocation_2_0, 
        		"FunctionLocation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='on' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRuleAccess().getOnKeyword_3());
    }
this_LCURLY_4=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_4, grammarAccess.getRuleAccess().getLCURLYTerminalRuleCall_4()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getWhereWhereParserRuleCall_5_0()); 
	    }
		lv_where_5_0=ruleWhere		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		set(
       			$current, 
       			"where",
        		lv_where_5_0, 
        		"Where");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_6=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_6, grammarAccess.getRuleAccess().getRCURLYTerminalRuleCall_6()); 
    }
	otherlv_7='do' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRuleAccess().getDoKeyword_7());
    }
this_LCURLY_8=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_8, grammarAccess.getRuleAccess().getLCURLYTerminalRuleCall_8()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getChoreographyChoreographyParserRuleCall_9_0()); 
	    }
		lv_choreography_9_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		set(
       			$current, 
       			"choreography",
        		lv_choreography_9_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_10=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_10, grammarAccess.getRuleAccess().getRCURLYTerminalRuleCall_10()); 
    }
this_RCURLY_11=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_11, grammarAccess.getRuleAccess().getRCURLYTerminalRuleCall_11()); 
    }
)
;





// Entry rule entryRuleWhere
entryRuleWhere returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhereRule()); }
	 iv_ruleWhere=ruleWhere 
	 { $current=$iv_ruleWhere.current; } 
	 EOF 
;

// Rule Where
ruleWhere returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhereAccess().getWhereConditionWhereCompareConditionParserRuleCall_0()); 
	    }
		lv_whereCondition_0_0=ruleWhereCompareCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhereRule());
	        }
       		set(
       			$current, 
       			"whereCondition",
        		lv_whereCondition_0_0, 
        		"WhereCompareCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleWhereExpressionBasicTerm
entryRuleWhereExpressionBasicTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhereExpressionBasicTermRule()); }
	 iv_ruleWhereExpressionBasicTerm=ruleWhereExpressionBasicTerm 
	 { $current=$iv_ruleWhereExpressionBasicTerm.current; } 
	 EOF 
;

// Rule WhereExpressionBasicTerm
ruleWhereExpressionBasicTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='N.' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhereExpressionBasicTermAccess().getNKeyword_0_0());
    }
(
(
		lv_nVariable_1_0=RULE_ID
		{
			newLeafNode(lv_nVariable_1_0, grammarAccess.getWhereExpressionBasicTermAccess().getNVariableIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhereExpressionBasicTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nVariable",
        		lv_nVariable_1_0, 
        		"ID");
	    }

)
))
    |(	otherlv_2='E.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWhereExpressionBasicTermAccess().getEKeyword_1_0());
    }
(
(
		lv_eVariable_3_0=RULE_ID
		{
			newLeafNode(lv_eVariable_3_0, grammarAccess.getWhereExpressionBasicTermAccess().getEVariableIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhereExpressionBasicTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"eVariable",
        		lv_eVariable_3_0, 
        		"ID");
	    }

)
))
    |(
(
		lv_sVariable_4_0=RULE_ID
		{
			newLeafNode(lv_sVariable_4_0, grammarAccess.getWhereExpressionBasicTermAccess().getSVariableIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhereExpressionBasicTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sVariable",
        		lv_sVariable_4_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleWhereCompareCondition
entryRuleWhereCompareCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhereCompareConditionRule()); }
	 iv_ruleWhereCompareCondition=ruleWhereCompareCondition 
	 { $current=$iv_ruleWhereCompareCondition.current; } 
	 EOF 
;

// Rule WhereCompareCondition
ruleWhereCompareCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		{ 
	        newCompositeNode(grammarAccess.getWhereCompareConditionAccess().getLeftExpressionWhereExpressionBasicTermParserRuleCall_0_0_0_0()); 
	    }
		lv_leftExpression_0_0=ruleWhereExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhereCompareConditionRule());
	        }
       		set(
       			$current, 
       			"leftExpression",
        		lv_leftExpression_0_0, 
        		"WhereExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWhereCompareConditionAccess().getOperatorConditionOperatorParserRuleCall_0_0_1_0()); 
	    }
		lv_operator_1_0=ruleConditionOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhereCompareConditionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"ConditionOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWhereCompareConditionAccess().getRightExpressionExpressionParserRuleCall_0_0_2_0()); 
	    }
		lv_rightExpression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhereCompareConditionRule());
	        }
       		set(
       			$current, 
       			"rightExpression",
        		lv_rightExpression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_true_3_0=RULE_TRUE
		{
			newLeafNode(lv_true_3_0, grammarAccess.getWhereCompareConditionAccess().getTrueTRUETerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhereCompareConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"true",
        		true, 
        		"TRUE");
	    }

)
)
    |(
(
		lv_false_4_0=RULE_FALSE
		{
			newLeafNode(lv_false_4_0, grammarAccess.getWhereCompareConditionAccess().getFalseFALSETerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhereCompareConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"false",
        		true, 
        		"FALSE");
	    }

)
))((
(
		{ 
	        newCompositeNode(grammarAccess.getWhereCompareConditionAccess().getLogicOpWhereLogicOpParserRuleCall_1_0_0()); 
	    }
		lv_logicOp_5_0=ruleWhereLogicOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhereCompareConditionRule());
	        }
       		set(
       			$current, 
       			"logicOp",
        		lv_logicOp_5_0, 
        		"WhereLogicOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWhereCompareConditionAccess().getContinuationWhereCompareConditionParserRuleCall_1_1_0()); 
	    }
		lv_continuation_6_0=ruleWhereCompareCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhereCompareConditionRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_6_0, 
        		"WhereCompareCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleWhereLogicOp
entryRuleWhereLogicOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhereLogicOpRule()); }
	 iv_ruleWhereLogicOp=ruleWhereLogicOp 
	 { $current=$iv_ruleWhereLogicOp.current; } 
	 EOF 
;

// Rule WhereLogicOp
ruleWhereLogicOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_and_0_0=RULE_AND
		{
			newLeafNode(lv_and_0_0, grammarAccess.getWhereLogicOpAccess().getAndANDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhereLogicOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"and",
        		true, 
        		"AND");
	    }

)
)
    |(
(
		lv_or_1_0=RULE_OR
		{
			newLeafNode(lv_or_1_0, grammarAccess.getWhereLogicOpAccess().getOrORTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhereLogicOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"or",
        		true, 
        		"OR");
	    }

)
))
;





// Entry rule entryRulePreamble
entryRulePreamble returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreambleRule()); }
	 iv_rulePreamble=rulePreamble 
	 { $current=$iv_rulePreamble.current; } 
	 EOF 
;

// Rule Preamble
rulePreamble returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='starter:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreambleAccess().getStarterKeyword_0());
    }
(
(
		lv_starter_1_0=RULE_ID
		{
			newLeafNode(lv_starter_1_0, grammarAccess.getPreambleAccess().getStarterIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreambleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"starter",
        		lv_starter_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPreambleAccess().getLocDefinitionLocationDefinitionParserRuleCall_2_0()); 
	    }
		lv_locDefinition_2_0=ruleLocationDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreambleRule());
	        }
       		set(
       			$current, 
       			"locDefinition",
        		lv_locDefinition_2_0, 
        		"LocationDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleFunctionLocation
entryRuleFunctionLocation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionLocationRule()); }
	 iv_ruleFunctionLocation=ruleFunctionLocation 
	 { $current=$iv_ruleFunctionLocation.current; } 
	 EOF 
;

// Rule FunctionLocation
ruleFunctionLocation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFunctionLocationAccess().getIncludeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionLocationAccess().getFunctionsFunctionListParserRuleCall_1_0()); 
	    }
		lv_functions_1_0=ruleFunctionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionLocationRule());
	        }
       		set(
       			$current, 
       			"functions",
        		lv_functions_1_0, 
        		"FunctionList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='from' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionLocationAccess().getFromKeyword_2());
    }
(
(
		lv_location_3_0=RULE_STRING
		{
			newLeafNode(lv_location_3_0, grammarAccess.getFunctionLocationAccess().getLocationSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionLocationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"location",
        		lv_location_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4='with' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFunctionLocationAccess().getWithKeyword_4_0());
    }
(
(
		lv_protocol_5_0=RULE_STRING
		{
			newLeafNode(lv_protocol_5_0, grammarAccess.getFunctionLocationAccess().getProtocolSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionLocationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"protocol",
        		lv_protocol_5_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleFunctionList
entryRuleFunctionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionListRule()); }
	 iv_ruleFunctionList=ruleFunctionList 
	 { $current=$iv_ruleFunctionList.current; } 
	 EOF 
;

// Rule FunctionList
ruleFunctionList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_functionName_0_0=RULE_ID
		{
			newLeafNode(lv_functionName_0_0, grammarAccess.getFunctionListAccess().getFunctionNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionListRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"functionName",
        		lv_functionName_0_0, 
        		"ID");
	    }

)
)(this_COMMA_1=RULE_COMMA
    { 
    newLeafNode(this_COMMA_1, grammarAccess.getFunctionListAccess().getCOMMATerminalRuleCall_1_0()); 
    }
(
(
		lv_functionName_2_0=RULE_ID
		{
			newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionListAccess().getFunctionNameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionListRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"functionName",
        		lv_functionName_2_0, 
        		"ID");
	    }

)
))*)
;





// Entry rule entryRuleLocationDefinition
entryRuleLocationDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocationDefinitionRule()); }
	 iv_ruleLocationDefinition=ruleLocationDefinition 
	 { $current=$iv_ruleLocationDefinition.current; } 
	 EOF 
;

// Rule LocationDefinition
ruleLocationDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='location' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLocationDefinitionAccess().getLocationKeyword_0());
    }
this_AT_1=RULE_AT
    { 
    newLeafNode(this_AT_1, grammarAccess.getLocationDefinitionAccess().getATTerminalRuleCall_1()); 
    }
(
(
		lv_role_2_0=RULE_ID
		{
			newLeafNode(lv_role_2_0, grammarAccess.getLocationDefinitionAccess().getRoleIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocationDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"role",
        		lv_role_2_0, 
        		"ID");
	    }

)
)this_COLON_3=RULE_COLON
    { 
    newLeafNode(this_COLON_3, grammarAccess.getLocationDefinitionAccess().getCOLONTerminalRuleCall_3()); 
    }
(
(
		lv_location_4_0=RULE_STRING
		{
			newLeafNode(lv_location_4_0, grammarAccess.getLocationDefinitionAccess().getLocationSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocationDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"location",
        		lv_location_4_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLocationDefinitionAccess().getContinuationLocationDefinitionParserRuleCall_5_0()); 
	    }
		lv_continuation_5_0=ruleLocationDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocationDefinitionRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_5_0, 
        		"LocationDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleChoreography
entryRuleChoreography returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChoreographyRule()); }
	 iv_ruleChoreography=ruleChoreography 
	 { $current=$iv_ruleChoreography.current; } 
	 EOF 
;

// Rule Choreography
ruleChoreography returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getChoreographyAccess().getSeqBlockSeqBlockParserRuleCall_0_0()); 
	    }
		lv_seqBlock_0_0=ruleSeqBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoreographyRule());
	        }
       		set(
       			$current, 
       			"seqBlock",
        		lv_seqBlock_0_0, 
        		"SeqBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_PIPE_1=RULE_PIPE
    { 
    newLeafNode(this_PIPE_1, grammarAccess.getChoreographyAccess().getPIPETerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChoreographyAccess().getNextChoreographyParserRuleCall_1_1_0()); 
	    }
		lv_next_2_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoreographyRule());
	        }
       		set(
       			$current, 
       			"next",
        		lv_next_2_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleSeqBlock
entryRuleSeqBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSeqBlockRule()); }
	 iv_ruleSeqBlock=ruleSeqBlock 
	 { $current=$iv_ruleSeqBlock.current; } 
	 EOF 
;

// Rule SeqBlock
ruleSeqBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqBlockAccess().getEventSkipParserRuleCall_0_0_0()); 
	    }
		lv_event_0_1=ruleSkip		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqBlockRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_0_1, 
        		"Skip");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSeqBlockAccess().getEventInteractionParserRuleCall_0_0_1()); 
	    }
		lv_event_0_2=ruleInteraction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqBlockRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_0_2, 
        		"Interaction");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSeqBlockAccess().getEventLocalCodeParserRuleCall_0_0_2()); 
	    }
		lv_event_0_3=ruleLocalCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqBlockRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_0_3, 
        		"LocalCode");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSeqBlockAccess().getEventIfThenElseParserRuleCall_0_0_3()); 
	    }
		lv_event_0_4=ruleIfThenElse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqBlockRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_0_4, 
        		"IfThenElse");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSeqBlockAccess().getEventWhileParserRuleCall_0_0_4()); 
	    }
		lv_event_0_5=ruleWhile		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqBlockRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_0_5, 
        		"While");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSeqBlockAccess().getEventScopeParserRuleCall_0_0_5()); 
	    }
		lv_event_0_6=ruleScope		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqBlockRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_0_6, 
        		"Scope");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSeqBlockAccess().getEventNestedChoreographyParserRuleCall_0_0_6()); 
	    }
		lv_event_0_7=ruleNestedChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqBlockRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_0_7, 
        		"NestedChoreography");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(this_SEMICOLON_1=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_1, grammarAccess.getSeqBlockAccess().getSEMICOLONTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqBlockAccess().getNextSeqBlockParserRuleCall_1_1_0()); 
	    }
		lv_next_2_0=ruleSeqBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqBlockRule());
	        }
       		set(
       			$current, 
       			"next",
        		lv_next_2_0, 
        		"SeqBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleSkip
entryRuleSkip returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSkipRule()); }
	 iv_ruleSkip=ruleSkip 
	 { $current=$iv_ruleSkip.current; } 
	 EOF 
;

// Rule Skip
ruleSkip returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_skip_0_0=	'skip' 
    {
        newLeafNode(lv_skip_0_0, grammarAccess.getSkipAccess().getSkipSkipKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSkipRule());
	        }
       		setWithLastConsumed($current, "skip", true, "skip");
	    }

)
)
;





// Entry rule entryRuleInteraction
entryRuleInteraction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractionRule()); }
	 iv_ruleInteraction=ruleInteraction 
	 { $current=$iv_ruleInteraction.current; } 
	 EOF 
;

// Rule Interaction
ruleInteraction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operation_0_0=RULE_ID
		{
			newLeafNode(lv_operation_0_0, grammarAccess.getInteractionAccess().getOperationIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getInteractionAccess().getCOLONTerminalRuleCall_1()); 
    }
(
(
		lv_sender_2_0=RULE_ID
		{
			newLeafNode(lv_sender_2_0, grammarAccess.getInteractionAccess().getSenderIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sender",
        		lv_sender_2_0, 
        		"ID");
	    }

)
)this_LPAREN_3=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_3, grammarAccess.getInteractionAccess().getLPARENTerminalRuleCall_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractionAccess().getSenderExpressionExpressionBasicTermParserRuleCall_4_0()); 
	    }
		lv_senderExpression_4_0=ruleExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractionRule());
	        }
       		set(
       			$current, 
       			"senderExpression",
        		lv_senderExpression_4_0, 
        		"ExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getInteractionAccess().getRPARENTerminalRuleCall_5()); 
    }
this_ARROW_6=RULE_ARROW
    { 
    newLeafNode(this_ARROW_6, grammarAccess.getInteractionAccess().getARROWTerminalRuleCall_6()); 
    }
(
(
		lv_receiver_7_0=RULE_ID
		{
			newLeafNode(lv_receiver_7_0, grammarAccess.getInteractionAccess().getReceiverIDTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"receiver",
        		lv_receiver_7_0, 
        		"ID");
	    }

)
)this_LPAREN_8=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_8, grammarAccess.getInteractionAccess().getLPARENTerminalRuleCall_8()); 
    }
(
(
		lv_receiverVariable_9_0=RULE_ID
		{
			newLeafNode(lv_receiverVariable_9_0, grammarAccess.getInteractionAccess().getReceiverVariableIDTerminalRuleCall_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"receiverVariable",
        		lv_receiverVariable_9_0, 
        		"ID");
	    }

)
)?this_RPAREN_10=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getInteractionAccess().getRPARENTerminalRuleCall_10()); 
    }
)
;





// Entry rule entryRuleLocalCode
entryRuleLocalCode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalCodeRule()); }
	 iv_ruleLocalCode=ruleLocalCode 
	 { $current=$iv_ruleLocalCode.current; } 
	 EOF 
;

// Rule LocalCode
ruleLocalCode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalCodeAccess().getLocalAskCommandAction_0_0(),
            $current);
    }
)(
(
		lv_resultVariable_1_0=RULE_ID
		{
			newLeafNode(lv_resultVariable_1_0, grammarAccess.getLocalCodeAccess().getResultVariableIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"resultVariable",
        		lv_resultVariable_1_0, 
        		"ID");
	    }

)
)this_AT_2=RULE_AT
    { 
    newLeafNode(this_AT_2, grammarAccess.getLocalCodeAccess().getATTerminalRuleCall_0_2()); 
    }
(
(
		lv_thread_3_0=RULE_ID
		{
			newLeafNode(lv_thread_3_0, grammarAccess.getLocalCodeAccess().getThreadIDTerminalRuleCall_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_3_0, 
        		"ID");
	    }

)
)this_ASSIGN_4=RULE_ASSIGN
    { 
    newLeafNode(this_ASSIGN_4, grammarAccess.getLocalCodeAccess().getASSIGNTerminalRuleCall_0_4()); 
    }
	otherlv_5='getInput' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLocalCodeAccess().getGetInputKeyword_0_5());
    }
this_LPAREN_6=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_6, grammarAccess.getLocalCodeAccess().getLPARENTerminalRuleCall_0_6()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalCodeAccess().getQuestionExpressionParserRuleCall_0_7_0()); 
	    }
		lv_question_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalCodeRule());
	        }
       		set(
       			$current, 
       			"question",
        		lv_question_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_8=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_8, grammarAccess.getLocalCodeAccess().getRPARENTerminalRuleCall_0_8()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalCodeAccess().getLocalShowCommandAction_1_0(),
            $current);
    }
)(
(
		lv_variable_10_0=RULE_ID
		{
			newLeafNode(lv_variable_10_0, grammarAccess.getLocalCodeAccess().getVariableIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variable",
        		lv_variable_10_0, 
        		"ID");
	    }

)
)this_AT_11=RULE_AT
    { 
    newLeafNode(this_AT_11, grammarAccess.getLocalCodeAccess().getATTerminalRuleCall_1_2()); 
    }
(
(
		lv_thread_12_0=RULE_ID
		{
			newLeafNode(lv_thread_12_0, grammarAccess.getLocalCodeAccess().getThreadIDTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_12_0, 
        		"ID");
	    }

)
)this_ASSIGN_13=RULE_ASSIGN
    { 
    newLeafNode(this_ASSIGN_13, grammarAccess.getLocalCodeAccess().getASSIGNTerminalRuleCall_1_4()); 
    }
	otherlv_14='show' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getLocalCodeAccess().getShowKeyword_1_5());
    }
this_LPAREN_15=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_15, grammarAccess.getLocalCodeAccess().getLPARENTerminalRuleCall_1_6()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalCodeAccess().getExpressionExpressionParserRuleCall_1_7_0()); 
	    }
		lv_expression_16_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalCodeRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_16_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_17=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_17, grammarAccess.getLocalCodeAccess().getRPARENTerminalRuleCall_1_8()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalCodeAccess().getLocalAssignmentCommandAction_2_0(),
            $current);
    }
)(
(
		lv_variable_19_0=RULE_ID
		{
			newLeafNode(lv_variable_19_0, grammarAccess.getLocalCodeAccess().getVariableIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variable",
        		lv_variable_19_0, 
        		"ID");
	    }

)
)this_AT_20=RULE_AT
    { 
    newLeafNode(this_AT_20, grammarAccess.getLocalCodeAccess().getATTerminalRuleCall_2_2()); 
    }
(
(
		lv_thread_21_0=RULE_ID
		{
			newLeafNode(lv_thread_21_0, grammarAccess.getLocalCodeAccess().getThreadIDTerminalRuleCall_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_21_0, 
        		"ID");
	    }

)
)this_ASSIGN_22=RULE_ASSIGN
    { 
    newLeafNode(this_ASSIGN_22, grammarAccess.getLocalCodeAccess().getASSIGNTerminalRuleCall_2_4()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getLocalCodeAccess().getExpressionExpressionParserRuleCall_2_5_0_0()); 
	    }
		lv_expression_23_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalCodeRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_23_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalCodeAccess().getFunctionFunctionParserRuleCall_2_5_1_0()); 
	    }
		lv_function_24_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalCodeRule());
	        }
       		set(
       			$current, 
       			"function",
        		lv_function_24_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleIfThenElse
entryRuleIfThenElse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfThenElseRule()); }
	 iv_ruleIfThenElse=ruleIfThenElse 
	 { $current=$iv_ruleIfThenElse.current; } 
	 EOF 
;

// Rule IfThenElse
ruleIfThenElse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_key_0_0=RULE_ID
		{
			newLeafNode(lv_key_0_0, grammarAccess.getIfThenElseAccess().getKeyIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfThenElseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getIfThenElseAccess().getCOLONTerminalRuleCall_0_1()); 
    }
)?	otherlv_2='if' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIfThenElseAccess().getIfKeyword_1());
    }
this_LPAREN_3=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_3, grammarAccess.getIfThenElseAccess().getLPARENTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseAccess().getConditionConditionParserRuleCall_3_0()); 
	    }
		lv_condition_4_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_4_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getIfThenElseAccess().getRPARENTerminalRuleCall_4()); 
    }
this_AT_6=RULE_AT
    { 
    newLeafNode(this_AT_6, grammarAccess.getIfThenElseAccess().getATTerminalRuleCall_5()); 
    }
(
(
		lv_thread_7_0=RULE_ID
		{
			newLeafNode(lv_thread_7_0, grammarAccess.getIfThenElseAccess().getThreadIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfThenElseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_7_0, 
        		"ID");
	    }

)
)this_LCURLY_8=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_8, grammarAccess.getIfThenElseAccess().getLCURLYTerminalRuleCall_7()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseAccess().getThenChoreographyParserRuleCall_8_0()); 
	    }
		lv_then_9_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_9_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_10=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_10, grammarAccess.getIfThenElseAccess().getRCURLYTerminalRuleCall_9()); 
    }
(	otherlv_11='else' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIfThenElseAccess().getElseKeyword_10_0());
    }
this_LCURLY_12=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_12, grammarAccess.getIfThenElseAccess().getLCURLYTerminalRuleCall_10_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseAccess().getElseChoreographyParserRuleCall_10_2_0()); 
	    }
		lv_else_13_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_13_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_14=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_14, grammarAccess.getIfThenElseAccess().getRCURLYTerminalRuleCall_10_3()); 
    }
)?)
;





// Entry rule entryRuleWhile
entryRuleWhile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhileRule()); }
	 iv_ruleWhile=ruleWhile 
	 { $current=$iv_ruleWhile.current; } 
	 EOF 
;

// Rule While
ruleWhile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='while' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhileAccess().getWhileKeyword_0());
    }
this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getWhileAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileAccess().getConditionConditionParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_3=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_3, grammarAccess.getWhileAccess().getRPARENTerminalRuleCall_3()); 
    }
this_AT_4=RULE_AT
    { 
    newLeafNode(this_AT_4, grammarAccess.getWhileAccess().getATTerminalRuleCall_4()); 
    }
(
(
		lv_thread_5_0=RULE_ID
		{
			newLeafNode(lv_thread_5_0, grammarAccess.getWhileAccess().getThreadIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhileRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_5_0, 
        		"ID");
	    }

)
)this_LCURLY_6=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_6, grammarAccess.getWhileAccess().getLCURLYTerminalRuleCall_6()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileAccess().getChoreographyChoreographyParserRuleCall_7_0()); 
	    }
		lv_choreography_7_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileRule());
	        }
       		set(
       			$current, 
       			"choreography",
        		lv_choreography_7_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_8=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_8, grammarAccess.getWhileAccess().getRCURLYTerminalRuleCall_8()); 
    }
(this_LCURLY_9=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_9, grammarAccess.getWhileAccess().getLCURLYTerminalRuleCall_9_0()); 
    }
(
(
		lv_key_10_0=RULE_ID
		{
			newLeafNode(lv_key_10_0, grammarAccess.getWhileAccess().getKeyIDTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhileRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_10_0, 
        		"ID");
	    }

)
)this_RCURLY_11=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_11, grammarAccess.getWhileAccess().getRCURLYTerminalRuleCall_9_2()); 
    }
)?)
;





// Entry rule entryRuleScope
entryRuleScope returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScopeRule()); }
	 iv_ruleScope=ruleScope 
	 { $current=$iv_ruleScope.current; } 
	 EOF 
;

// Rule Scope
ruleScope returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='scope' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScopeAccess().getScopeKeyword_0());
    }
this_AT_1=RULE_AT
    { 
    newLeafNode(this_AT_1, grammarAccess.getScopeAccess().getATTerminalRuleCall_1()); 
    }
(
(
		lv_thread_2_0=RULE_ID
		{
			newLeafNode(lv_thread_2_0, grammarAccess.getScopeAccess().getThreadIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScopeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_2_0, 
        		"ID");
	    }

)
)this_LCURLY_3=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_3, grammarAccess.getScopeAccess().getLCURLYTerminalRuleCall_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScopeAccess().getChoreographyChoreographyParserRuleCall_4_0()); 
	    }
		lv_choreography_4_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScopeRule());
	        }
       		set(
       			$current, 
       			"choreography",
        		lv_choreography_4_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_5=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_5, grammarAccess.getScopeAccess().getRCURLYTerminalRuleCall_5()); 
    }
(	otherlv_6='prop' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getScopeAccess().getPropKeyword_6_0());
    }
this_LCURLY_7=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_7, grammarAccess.getScopeAccess().getLCURLYTerminalRuleCall_6_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScopeAccess().getPropertiesAssignmentSetParserRuleCall_6_2_0()); 
	    }
		lv_properties_8_0=ruleAssignmentSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScopeRule());
	        }
       		set(
       			$current, 
       			"properties",
        		lv_properties_8_0, 
        		"AssignmentSet");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_9=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_9, grammarAccess.getScopeAccess().getRCURLYTerminalRuleCall_6_3()); 
    }
)?(	otherlv_10='roles' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getScopeAccess().getRolesKeyword_7_0());
    }
this_LCURLY_11=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_11, grammarAccess.getScopeAccess().getLCURLYTerminalRuleCall_7_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScopeAccess().getRolesRolesParserRuleCall_7_2_0()); 
	    }
		lv_roles_12_0=ruleRoles		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScopeRule());
	        }
       		set(
       			$current, 
       			"roles",
        		lv_roles_12_0, 
        		"Roles");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_13=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_13, grammarAccess.getScopeAccess().getRCURLYTerminalRuleCall_7_3()); 
    }
)?(this_LCURLY_14=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_14, grammarAccess.getScopeAccess().getLCURLYTerminalRuleCall_8_0()); 
    }
(
(
		lv_key_15_0=RULE_ID
		{
			newLeafNode(lv_key_15_0, grammarAccess.getScopeAccess().getKeyIDTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScopeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_15_0, 
        		"ID");
	    }

)
)this_RCURLY_16=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_16, grammarAccess.getScopeAccess().getRCURLYTerminalRuleCall_8_2()); 
    }
)?)
;





// Entry rule entryRuleRoles
entryRuleRoles returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRolesRule()); }
	 iv_ruleRoles=ruleRoles 
	 { $current=$iv_ruleRoles.current; } 
	 EOF 
;

// Rule Roles
ruleRoles returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_roles_0_0=RULE_ID
		{
			newLeafNode(lv_roles_0_0, grammarAccess.getRolesAccess().getRolesIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRolesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"roles",
        		lv_roles_0_0, 
        		"ID");
	    }

)
)(this_COMMA_1=RULE_COMMA
    { 
    newLeafNode(this_COMMA_1, grammarAccess.getRolesAccess().getCOMMATerminalRuleCall_1_0()); 
    }
(
(
		lv_roles_2_0=RULE_ID
		{
			newLeafNode(lv_roles_2_0, grammarAccess.getRolesAccess().getRolesIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRolesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"roles",
        		lv_roles_2_0, 
        		"ID");
	    }

)
))*)
;





// Entry rule entryRuleNestedChoreography
entryRuleNestedChoreography returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestedChoreographyRule()); }
	 iv_ruleNestedChoreography=ruleNestedChoreography 
	 { $current=$iv_ruleNestedChoreography.current; } 
	 EOF 
;

// Rule NestedChoreography
ruleNestedChoreography returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_LCURLY_0=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_0, grammarAccess.getNestedChoreographyAccess().getLCURLYTerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedChoreographyAccess().getChoreographyChoreographyParserRuleCall_1_0()); 
	    }
		lv_choreography_1_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedChoreographyRule());
	        }
       		set(
       			$current, 
       			"choreography",
        		lv_choreography_1_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_2=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_2, grammarAccess.getNestedChoreographyAccess().getRCURLYTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleAssignmentSet
entryRuleAssignmentSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentSetRule()); }
	 iv_ruleAssignmentSet=ruleAssignmentSet 
	 { $current=$iv_ruleAssignmentSet.current; } 
	 EOF 
;

// Rule AssignmentSet
ruleAssignmentSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentSetAccess().getAssignmentAssignmentParserRuleCall_0_0()); 
	    }
		lv_assignment_0_0=ruleAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentSetRule());
	        }
       		set(
       			$current, 
       			"assignment",
        		lv_assignment_0_0, 
        		"Assignment");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_1=RULE_COMMA
    { 
    newLeafNode(this_COMMA_1, grammarAccess.getAssignmentSetAccess().getCOMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentSetAccess().getContinuationAssignmentSetParserRuleCall_1_1_0()); 
	    }
		lv_continuation_2_0=ruleAssignmentSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentSetRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_2_0, 
        		"AssignmentSet");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	 iv_ruleAssignment=ruleAssignment 
	 { $current=$iv_ruleAssignment.current; } 
	 EOF 
;

// Rule Assignment
ruleAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='N.' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAssignmentAccess().getNKeyword_0());
    }
(
(
		lv_variable_1_0=RULE_ID
		{
			newLeafNode(lv_variable_1_0, grammarAccess.getAssignmentAccess().getVariableIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variable",
        		lv_variable_1_0, 
        		"ID");
	    }

)
)this_ASSIGN_2=RULE_ASSIGN
    { 
    newLeafNode(this_ASSIGN_2, grammarAccess.getAssignmentAccess().getASSIGNTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getSumExpressionSumExpressionParserRuleCall_0()); 
	    }
		lv_sumExpression_0_0=ruleSumExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"sumExpression",
        		lv_sumExpression_0_0, 
        		"SumExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSumExpression
entryRuleSumExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSumExpressionRule()); }
	 iv_ruleSumExpression=ruleSumExpression 
	 { $current=$iv_ruleSumExpression.current; } 
	 EOF 
;

// Rule SumExpression
ruleSumExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionAccess().getChildrenExpressionBasicTermParserRuleCall_0_0()); 
	    }
		lv_children_0_0=ruleExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_0_0, 
        		"ExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionAccess().getChildrenSumExpressionTermParserRuleCall_1_0()); 
	    }
		lv_children_1_0=ruleSumExpressionTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_1_0, 
        		"SumExpressionTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSumExpressionTerm
entryRuleSumExpressionTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSumExpressionTermRule()); }
	 iv_ruleSumExpressionTerm=ruleSumExpressionTerm 
	 { $current=$iv_ruleSumExpressionTerm.current; } 
	 EOF 
;

// Rule SumExpressionTerm
ruleSumExpressionTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSumExpressionTermAccess().getSumExpressionAddTermAction_0_0(),
            $current);
    }
)this_PLUS_1=RULE_PLUS
    { 
    newLeafNode(this_PLUS_1, grammarAccess.getSumExpressionTermAccess().getPLUSTerminalRuleCall_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionTermAccess().getExpressionExpressionBasicTermParserRuleCall_0_2_0()); 
	    }
		lv_expression_2_0=ruleExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionTermRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"ExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSumExpressionTermAccess().getSumExpressionSubtractTermAction_1_0(),
            $current);
    }
)this_MINUS_4=RULE_MINUS
    { 
    newLeafNode(this_MINUS_4, grammarAccess.getSumExpressionTermAccess().getMINUSTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionTermAccess().getExpressionExpressionBasicTermParserRuleCall_1_2_0()); 
	    }
		lv_expression_5_0=ruleExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionTermRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"ExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleExpressionBasicTerm
entryRuleExpressionBasicTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionBasicTermRule()); }
	 iv_ruleExpressionBasicTerm=ruleExpressionBasicTerm 
	 { $current=$iv_ruleExpressionBasicTerm.current; } 
	 EOF 
;

// Rule ExpressionBasicTerm
ruleExpressionBasicTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_variable_0_0=RULE_ID
		{
			newLeafNode(lv_variable_0_0, grammarAccess.getExpressionBasicTermAccess().getVariableIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionBasicTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variable",
        		lv_variable_0_0, 
        		"ID");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionBasicTermAccess().getConstantConstantParserRuleCall_1_0()); 
	    }
		lv_constant_1_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionBasicTermRule());
	        }
       		set(
       			$current, 
       			"constant",
        		lv_constant_1_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_LPAREN_2=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_2, grammarAccess.getExpressionBasicTermAccess().getLPARENTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionBasicTermAccess().getExpressionExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionBasicTermRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_4=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_4, grammarAccess.getExpressionBasicTermAccess().getRPARENTerminalRuleCall_2_2()); 
    }
))
;





// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	 iv_ruleFunction=ruleFunction 
	 { $current=$iv_ruleFunction.current; } 
	 EOF 
;

// Rule Function
ruleFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getFunctionAccess().getLPARENTerminalRuleCall_1()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getParamsExpressionParserRuleCall_2_0_0()); 
	    }
		lv_params_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getFunctionAccess().getCOMMATerminalRuleCall_2_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getParamsExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_params_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getFunctionAccess().getRPARENTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_intValue_0_0=RULE_INT
		{
			newLeafNode(lv_intValue_0_0, grammarAccess.getConstantAccess().getIntValueINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"intValue",
        		lv_intValue_0_0, 
        		"INT");
	    }

)
)
    |(
(
		lv_strValue_1_0=RULE_STRING
		{
			newLeafNode(lv_strValue_1_0, grammarAccess.getConstantAccess().getStrValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"strValue",
        		lv_strValue_1_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_true_2_0=RULE_TRUE
		{
			newLeafNode(lv_true_2_0, grammarAccess.getConstantAccess().getTrueTRUETerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"true",
        		lv_true_2_0, 
        		"TRUE");
	    }

)
)
    |(
(
		lv_false_3_0=RULE_FALSE
		{
			newLeafNode(lv_false_3_0, grammarAccess.getConstantAccess().getFalseFALSETerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"false",
        		lv_false_3_0, 
        		"FALSE");
	    }

)
))
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getCompareConditionCompareConditionParserRuleCall_0()); 
	    }
		lv_compareCondition_0_0=ruleCompareCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		set(
       			$current, 
       			"compareCondition",
        		lv_compareCondition_0_0, 
        		"CompareCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleCompareCondition
entryRuleCompareCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompareConditionRule()); }
	 iv_ruleCompareCondition=ruleCompareCondition 
	 { $current=$iv_ruleCompareCondition.current; } 
	 EOF 
;

// Rule CompareCondition
ruleCompareCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		{ 
	        newCompositeNode(grammarAccess.getCompareConditionAccess().getLeftExpressionExpressionParserRuleCall_0_0_0_0()); 
	    }
		lv_leftExpression_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareConditionRule());
	        }
       		set(
       			$current, 
       			"leftExpression",
        		lv_leftExpression_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareConditionAccess().getOperatorConditionOperatorParserRuleCall_0_0_1_0()); 
	    }
		lv_operator_1_0=ruleConditionOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareConditionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"ConditionOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareConditionAccess().getRightExpressionExpressionParserRuleCall_0_0_2_0()); 
	    }
		lv_rightExpression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareConditionRule());
	        }
       		set(
       			$current, 
       			"rightExpression",
        		lv_rightExpression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_true_3_0=RULE_TRUE
		{
			newLeafNode(lv_true_3_0, grammarAccess.getCompareConditionAccess().getTrueTRUETerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompareConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"true",
        		true, 
        		"TRUE");
	    }

)
)
    |(
(
		lv_false_4_0=RULE_FALSE
		{
			newLeafNode(lv_false_4_0, grammarAccess.getCompareConditionAccess().getFalseFALSETerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompareConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"false",
        		true, 
        		"FALSE");
	    }

)
))(((
(
		lv_and_5_0=RULE_AND
		{
			newLeafNode(lv_and_5_0, grammarAccess.getCompareConditionAccess().getAndANDTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompareConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"and",
        		true, 
        		"AND");
	    }

)
)
    |(
(
		lv_or_6_0=RULE_OR
		{
			newLeafNode(lv_or_6_0, grammarAccess.getCompareConditionAccess().getOrORTerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompareConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"or",
        		true, 
        		"OR");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareConditionAccess().getNextCompareConditionParserRuleCall_1_1_0()); 
	    }
		lv_next_7_0=ruleCompareCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareConditionRule());
	        }
       		set(
       			$current, 
       			"next",
        		lv_next_7_0, 
        		"CompareCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleConditionOperator
entryRuleConditionOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionOperatorRule()); }
	 iv_ruleConditionOperator=ruleConditionOperator 
	 { $current=$iv_ruleConditionOperator.current; } 
	 EOF 
;

// Rule ConditionOperator
ruleConditionOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_less_0_0=RULE_LESS
		{
			newLeafNode(lv_less_0_0, grammarAccess.getConditionOperatorAccess().getLessLESSTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"less",
        		true, 
        		"LESS");
	    }

)
)
    |(
(
		lv_equal_1_0=RULE_EQUAL
		{
			newLeafNode(lv_equal_1_0, grammarAccess.getConditionOperatorAccess().getEqualEQUALTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"equal",
        		true, 
        		"EQUAL");
	    }

)
)
    |(
(
		lv_greater_2_0=RULE_GREATER
		{
			newLeafNode(lv_greater_2_0, grammarAccess.getConditionOperatorAccess().getGreaterGREATERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"greater",
        		true, 
        		"GREATER");
	    }

)
)
    |(
(
		lv_not_equal_3_0=RULE_NOT_EQUAL
		{
			newLeafNode(lv_not_equal_3_0, grammarAccess.getConditionOperatorAccess().getNot_equalNOT_EQUALTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"not_equal",
        		true, 
        		"NOT_EQUAL");
	    }

)
))
;





RULE_LCURLY : '{';

RULE_RCURLY : '}';

RULE_ARROW : '->';

RULE_SEMICOLON : ';';

RULE_PIPE : '|';

RULE_COLON : ':';

RULE_PLUS : '+';

RULE_MINUS : '-';

RULE_AT : '@';

RULE_ASSIGN : '=';

RULE_DOT : '.';

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_COMMA : ',';

RULE_LESS : '<';

RULE_EQUAL : '==';

RULE_GREATER : '>';

RULE_NOT_EQUAL : '!=';

RULE_AND : 'and';

RULE_OR : 'or';

RULE_TRUE : 'true';

RULE_FALSE : 'false';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


